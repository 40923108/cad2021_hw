<h1>About</h1>
<p>Number：40923108 </p>
<p>網站倉儲: <a href="https://github.com/40923108/cad2021_hw">https://github.com/40923108/cad2021_hw</a></p>
<p>網站連結: <a href="https://40923108.github.io/cad2021_hw/">https://40923108.github.io/cad2021_hw/</a></p>
<h1>HW1</h1>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.11.10 22:00 關閉.</span></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<h2>CAD1 Solvespace</h2>
<p><span style="background-color: #ccffff;"><strong>Solvespace 緣起說明與介紹</strong></span></p>
<p>SolveSpace 的大部分基本功能，包括草圖、約束、拉伸和布爾運算。</p>
<ul>
<li>組裝：<span>可以修改零件並重新生成裝配體，零件將保持在所需配置中的組裝狀態</span></li>
<li><span>約束：幾種不同的方式約束一個簡單的草圖，並在過度約束後使用 SolveSpace 提供的工具進行調  試，查看具有多個解決方案的草圖，以及 3d 和投影到工作平面中的約束。</span></li>
<li><span>鏈接：幾何約束對平面連桿進行建模；<span>然後我們置換其中一個鏈接，讓約束求解器計算結果幾何，用它來繪製連桿的耦合器曲線，並為連接到連桿骨架的實體模型設置動畫。</span></span></li>
<li><span><span>二維繪圖：使用 SolveSpace 繪製純二維零件。<span>從一個輪廓開始，並使用尺寸和約束來指定</span>使用特殊工具在相交處分割直線和曲線，並相互修剪、圓化尖角。<span>繪製零件後，在幾何體上放置裝飾尺寸，並導出人類可讀的尺寸圖。</span></span></span><span><span><span></span></span></span></li>
</ul>
<p></p>
<h3>CAD1 安裝配置</h3>
<p><strong><span style="background-color: #ccffff;">Solvesape安裝步驟</span></strong></p>
<p>點入下圖連結 test</p>
<p><img alt="" height="112" src="https://40923108.github.io/cad2021_hw/images/%E4%B8%8B%E8%BC%891.png" width="850"/></p>
<p><img alt="" height="550" src="https://40923108.github.io/cad2021_hw/images/%E4%B8%8B%E8%BC%892.png" width="850"/></p>
<p><img alt="" height="403" src="https://40923108.github.io/cad2021_hw/images/%E4%B8%8B%E8%BC%89%203.png" width="850"/></p>
<p><img alt="" height="381" src="https://40923108.github.io/cad2021_hw/images/%E4%B8%8B%E8%BC%894.png" width="850"/></p>
<p></p>
<p>放入資料夾內即可完成</p>
<p>把<span style="color: #ff0000;">start_ipv4.bat<span style="color: #000000;">拉至白窗</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">新增下圖段落，啟用時就能同時開啟solvespace</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"><img alt="" height="1112" src="https://40923108.github.io/cad2021_hw/images/%E4%B8%8B%E8%BC%895.png" width="850"/></span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">Solvespace 安裝影片</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/vOUEuf1r1Y0" width="560"></iframe></span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"></span></span></p>
<h3>CAD1 操作流程</h3>
<p>首先啟動solvespace後</p>
<p>點擊<span style="color: #ff0000;">image</span>即可載入圖片即可開始繪圖</p>
<p><img alt="" height="458" src="https://40923108.github.io/cad2021_hw/images/sl1.png" width="850"/></p>
<p>1的區塊為<span style="color: #ff0000;">繪製工具</span></p>
<p>2的區塊為<span color="#ff0000" style="color: #ff0000;">註解、限制級修改圖形</span></p>
<p>3的區塊為<span style="color: #ff0000;">展開圖形</span></p>
<p>所有功能都有屬於自己的快捷鍵，在名稱後的()括弧內。</p>
<p><img alt="" height="455" src="https://40923108.github.io/cad2021_hw/images/sl.png" width="850"/></p>
<p>點擊滑鼠<span style="color: #000000;">左鍵</span>拉伸圖片大小</p>
<p>按住滑鼠中間<span style="color: #000000;">滾輪</span>可旋轉平面</p>
<p>滾動滾輪可調整視窗大小</p>
<p><img alt="" height="456" src="https://40923108.github.io/cad2021_hw/images/sl2.png" width="850"/></p>
<p>旋轉畫面後可按<strong><span style="color: #ff0000;">W</span></strong>返回最一開始的工作平面</p>
<p>註：W 為<span style="color: #0000ff;">Align view to workplanw<span style="color: #000000;">快捷鍵，在上排的view底下</span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;">solvespace安裝影片</span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/vOUEuf1r1Y0" width="560"></iframe></span></span></p>
<p>slovespace繪圖方式</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/umXKjHe8JaE" width="560"></iframe></p>
<h2>CAD2 Onshape</h2>
<p><span style="background-color: #ccffff;"><strong>Onshape 緣起說明與介紹</strong></span></p>
<p>Onshape為一套線上3D軟體，無須透過下載、安裝或許可證代碼得到程式，僅需透過任何的<span>現代網路瀏覽器訪問 Onshape 的平台。</span><span>管理員可以立即配置和取消配置以擴展他們的設計團隊並滿足不斷變化的業務需求，團隊還可以一起或彼此獨立地試驗設計備選方案，而不會影響彼此的工作，然而團隊間可以一起或彼此獨立地試驗設計備選方案，而不會影響彼此的工作。</span></p>
<p><strong><span style="background-color: #ccffff;">Onshape 基本設定</span></strong></p>
<p>將基本單位設定成公制</p>
<p><img alt="" height="415" src="https://40923108.github.io/cad2021_hw/images/4.png" width="850"/></p>
<p>設定滑鼠的使用習慣方便操作</p>
<p><img alt="" height="439" src="https://40923108.github.io/cad2021_hw/images/5.png" width="850"/></p>
<p></p>
<p><strong><span style="background-color: #ccffff;">Onshape版面介紹</span></strong></p>
<p><span style="background-color: #ccffff;"></span>點選左上方建立，以便建立草圖</p>
<p><img alt="" height="394" src="https://40923108.github.io/cad2021_hw/images/5-1.png" width="850"/></p>
<p>共有三個平面</p>
<p>分別有：Top/Front/Right</p>
<p>點選是當平面即可開始繪圖</p>
<p><img alt="" height="418" src="https://40923108.github.io/cad2021_hw/images/6.png" width="850"/></p>
<p></p>
<h3>CAD2 安裝配置</h3>
<p><strong><span style="color: #000000; background-color: #ccffff;">Onshape 安裝步驟</span></strong></p>
<p><strong></strong>先登入申請學生帳號test</p>
<p><img alt="" height="415" src="/images/1.png" width="850"/></p>
<p><img alt="" height="418" src="/images/2.png" width="850"/></p>
<p><img alt="" height="423" src="/images/3.png" width="850"/></p>
<p>輸入個人資料、設定</p>
<p><img alt="" height="415" src="/images/4.png" width="850"/></p>
<p>onshape安裝影片：</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/wwo_z3CrS18" width="560"></iframe></p>
<h3>CAD2 操作流程</h3>
<p>onshape繪圖流程：</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_G4Q2V4uqYc" width="560"></iframe></p>
<p></p>
<h2>運動場景</h2>
<h4>CAD1:</h4>
<p style="padding-left: 30px;">solvespace零件轉出後轉入 CoppeliaSim 操作影片 </p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/dk1EPC_hgkY" width="560"></iframe></span></p>
<h4>CAD2:</h4>
<p style="padding-left: 30px;">onshape 零件轉出後轉入 CoppeliaSim 操作影片 </p>
<p style="padding-left: 30px;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Xv7qtBIg0Vg" width="560"></iframe></p>
<p style="padding-left: 30px;"></p>
<h1>H3</h1>
<p>test123</p>
<p></p>
<p></p><h1>W13</h1>
<p>onshape使用wink錄製</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/連桿2.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>solvespace使用wink錄製</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/solvespace.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>四連桿模擬</p>
<p><img alt="" height="478" src="/images/連桿.png" width="850"/></p>
<h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>MeArm模擬</h1>
<p>零件模擬檔案：<a href="https://drive.google.com/file/d/154Y6cba4tB8eaWRpusbaNr6o71bBM73h/view" title="檔案下載">https://drive.google.com/file/d/154Y6cba4tB8eaWRpusbaNr6o71bBM73h/view</a></p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/mearm.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>Final Project</h1>
<p>自選 CAD 套件, 完成零組件繪圖後, 轉入 CoppeliaSim, 以 Slider 0-360 度控制藍色搖桿轉動<em>.</em></p>
<p>零件繪製：</p>
<p><img alt="" height="478" src="/images/1.png" width="850"/></p>
<p><img alt="" height="478" src="/images/2.png" width="850"/></p>
<p><img alt="" height="478" src="/images/3.png" width="850"/></p>
<p><img alt="" height="478" src="/images/3.png" width="850"/></p>
<p><img alt="" height="478" src="/images/5.png" width="850"/></p>
<p><img alt="" height="478" src="/images/6.png" width="850"/></p>
<p><img alt="" height="478" src="/images/7.png" width="850"/></p>
<p><img alt="" height="478" src="/images/8.png" width="850"/></p>
<p>零件組裝：</p>
<p><img alt="" height="478" src="/images/9.png" width="850"/></p><h1>Note</h1>
<h2>倉儲建立</h2>
<p>到<span style="color: #ff0000;">mde.tw</span>&gt;<span style="color: #ff0000;">cmstemplate</span>內的<span style="color: #ff0000;">可攜系統</span></p>
<p>下載三個可攜程式到隨身碟</p>
<p><img alt="" height="490" src="https://40923108.github.io/cad2021_hw/images/11.png" width="850"/></p>
<p>將ipv4拉至白窗</p>
<p><span>修改ipv4和下圖畫底線處一樣</span></p>
<p><img alt="" height="1098" src="https://40923108.github.io/cad2021_hw/images/9.png" width="850"/></p>
<p><img alt="" height="342" src="https://40923108.github.io/cad2021_hw/images/10.png" width="850"/></p>
<p>使用template，創建個人倉儲及網站</p>
<p><img alt="" height="384" src="https://40923108.github.io/cad2021_hw/images/7.png" width="850"/></p>
<p>創立一個名為<span style="color: #ff0000;">cad2021_hw</span>的倉儲</p>
<p><img alt="" height="523" src="https://40923108.github.io/cad2021_hw/images/8.png" width="850"/></p>
<p>複製個人倉儲的URL後git clone</p>
<p>註：需要在網址的最後加上<span style="color: #ff0000;">.git</span></p>
<p>完成clone可啟動動態網站</p>
<p><img alt="" height="298" src="https://40923108.github.io/cad2021_hw/images/12.png" width="850"/></p>
<p>(第一次啟動動態網站會出現錯誤，需要打上<span style="color: #ff0000;">pip install pyopenssl</span>)</p>
<h2>Token</h2>
<p>到<span style="color: #ff0000;">setting</span>中的<span style="color: #ff0000;">developer setting</span> 創建一個無期限的token</p>
<p><img alt="" height="289" src="https://40923108.github.io/cad2021_hw/images/token2.png" width="850"/></p>
<p>成功創好token會給一串密碼(紅色底線)，需放到config裡</p>
<p>在token後需要自己加一個<span style="color: #ff0000;">@</span></p>
<p><img alt="" height="801" src="https://40923108.github.io/cad2021_hw/images/token.png" width="850"/></p>
<h2>Wink</h2>
<p>從Google搜尋<span style="color: #ff0000;"><strong>debugmode wink</strong></span></p>
<p>將wink下載下來</p>
<p><img alt="" height="279" src="https://40923108.github.io/cad2021_hw/images/W1.png" width="850"/></p>
<p>開啟wink的應用程式</p>
<p><img alt="" height="546" src="https://40923108.github.io/cad2021_hw/images/W2.png" width="850"/></p>
<p>按下<span style="color: #ff0000;"><b>I Agree</b></span></p>
<p><span><img alt="" height="612" src="https://40923108.github.io/cad2021_hw/images/W3.jpg" width="850"/></span></p>
<p><span>按 </span><span style="color: #ff0000;"><strong>Browse </strong></span><span>將資料存在隨身碟中</span><span>，最後 </span><strong><span style="color: #ff0000;">Install</span> </strong><span>就下載好了</span></p>
<p><img alt="" height="630" src="https://40923108.github.io/cad2021_hw/images/W4.jpg" width="850"/></p>
<p><strong>Wink 使用影片</strong></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/操作.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>Fossil</h2>
<h1>RUN</h1>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>